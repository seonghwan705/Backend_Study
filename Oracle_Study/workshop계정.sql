SELECT *
FROM TB_DEPARTMENT;

-- 문제 1
SELECT DEPARTMENT_NAME AS "학과 명", CATEGORY AS "계열"
FROM TB_DEPARTMENT; 

-- 문제 2
SELECT DEPARTMENT_NAME || '의 정원은 ' || CAPACITY || '명 입니다.' AS "학과별 정원"
FROM TB_DEPARTMENT;

-- 문제 3 
SELECT DEPARTMENT_NO
FROM TB_DEPARTMENT
WHERE DEPARTMENT_NAME = '국어국문학과';

SELECT *
FROM TB_STUDENT;

SELECT STUDENT_NAME
FROM TB_STUDENT
WHERE DEPARTMENT_NO = '001' AND ABSENCE_YN = 'Y' AND STUDENT_SSN LIKE '%2______';

-- 문제 4
SELECT STUDENT_NAME
FROM TB_STUDENT
WHERE STUDENT_NO IN ('A513079','A513090','A513091','A513110','A513119');

-- 문제 5
SELECT * 
FROM TB_DEPARTMENT;

SELECT DEPARTMENT_NAME, CATEGORY
FROM TB_DEPARTMENT
WHERE CAPACITY BETWEEN 20 AND 30;

-- 문제 6
SELECT * 
FROM TB_PROFESSOR
WHERE PROFESSOR_NAME = '임해정';

SELECT PROFESSOR_NAME 
FROM TB_PROFESSOR
WHERE DEPARTMENT_NO IS NULL;

-- 문제 7
SELECT *
FROM TB_STUDENT;

SELECT STUDENT_NAME
FROM TB_STUDENT
WHERE DEPARTMENT_NO IS NULL;

-- 문제 8
SELECT *
FROM TB_CLASS;

SELECT CLASS_NO
FROM TB_CLASS
WHERE PREATTENDING_CLASS_NO IS NOT NULL;

-- 문제 9 
SELECT DISTINCT CATEGORY
FROM TB_DEPARTMENT;

-- 문제 10
SELECT *
FROM TB_STUDENT;

SELECT STUDENT_NO, STUDENT_NAME, STUDENT_SSN
FROM TB_STUDENT
WHERE STUDENT_ADDRESS LIKE '전주%'  AND ABSENCE_YN = 'N' AND ENTRANCE_DATE LIKE '02%';

-- WORKSHOP 2
SELECT *
FROM TB_STUDENT;

-- 문제 1
SELECT STUDENT_NAME 이름, STUDENT_NO 학번, TO_CHAR(ENTRANCE_DATE, 'RRRR-MM-DD') 입학년도
FROM TB_STUDENT
WHERE DEPARTMENT_NO ='002'
ORDER BY ENTRANCE_DATE;

-- 문제 2
SELECT PROFESSOR_NAME, PROFESSOR_SSN
FROM TB_PROFESSOR
WHERE PROFESSOR_NAME NOT LIKE '___';

-- 문제 3 
SELECT *
FROM TB_PROFESSOR;

SELECT PROFESSOR_NAME AS 교수이름, TO_NUMBER(TO_CHAR(SYSDATE,'YYYY'))-TO_NUMBER('19'||SUBSTR(PROFESSOR_SSN,1,2)) AS 나이
FROM TB_PROFESSOR
WHERE SUBSTR(PROFESSOR_SSN,8,1) ='1'
ORDER BY 2,1;

-- 문제 4 
SELECT SUBSTR(PROFESSOR_NAME,2,2) AS 이름
FROM TB_PROFESSOR;

-- 문제 5
SELECT *
FROM TB_STUDENT;

SELECT  STUDENT_NO,
        STUDENT_NAME
FROM    TB_STUDENT
WHERE   TO_NUMBER(TO_CHAR(ENTRANCE_DATE, 'YYYY'))  - TO_NUMBER(TO_CHAR(TO_DATE(SUBSTR(STUDENT_SSN, 1, 2), 'RR'), 'YYYY')) > 19
ORDER BY 1;

-- 문제 6 2020년 크리스마스는 무슨 요일인가? 
SELECT TO_CHAR(TO_DATE('2020/12/25'), 'YYYYMMDD DAY') 
FROM DUAL;

-- 문제 7
SELECT STUDENT_NO,
       STUDENT_NAME
FROM   TB_STUDENT
WHERE  SUBSTR(STUDENT_NO, 1, 1) <> 'A' -- 같지않다. 
ORDER BY 1;

-- 문제 8 
SELECT *
FROM TB_STUDENT
WHERE STUDENT_NO = 'A517178';

SELECT ROUND(AVG(POINT),1) AS 평점
FROM TB_GRADE
WHERE STUDENT_NO = 'A517178';

-- 문제 9
SELECT DEPARTMENT_NO AS 학과번호, COUNT(*) AS "학생수(명)"
FROM TB_STUDENT
GROUP BY DEPARTMENT_NO
ORDER BY DEPARTMENT_NO;

-- 문제 10
SELECT COUNT(*)
FROM TB_STUDENT
WHERE COACH_PROFESSOR_NO IS NULL;

-- 문제 11 
SELECT *
FROM TB_GRADE;

SELECT SUBSTR(TERM_NO,1,4) AS 년도, ROUND(AVG(POINT),1) AS "년도 별 평점"
FROM TB_GRADE
WHERE STUDENT_NO = 'A112113'
GROUP BY SUBSTR(TERM_NO,1,4); -- '200105' 월 데이터까지 있기에, 포맷을 똑같이 맞춰서 GROUP BY

-- 문제 12
SELECT *
FROM TB_STUDENT;

SELECT DEPARTMENT_NO AS 학과코드명, COUNT(*) AS "휴학생 수"
FROM TB_STUDENT
WHERE ABSENCE_YN = 'Y' -- 이렇게 하면 휴학생 수가 0명인 것은 추출이 안됨.
GROUP BY DEPARTMENT_NO
ORDER BY 1;

SELECT DEPARTMENT_NO AS 학과코드명,  -- CASE WHEN 컬럼 THEN 참1 ELSE 거짓 1 END
       SUM(CASE WHEN ABSENCE_YN ='Y' THEN 1 
			     ELSE 0 END) AS "휴학생 수"
FROM   TB_STUDENT
GROUP BY DEPARTMENT_NO
ORDER BY 1;

SELECT DEPARTMENT_NO AS 학과코드명, SUM(DECODE(ABSENCE_YN, 'Y', 1, 0)) AS "휴학생 수"
FROM TB_STUDENT
GROUP BY DEPARTMENT_NO    -- DECODE(컬럼,'조건',참1,거짓1)
ORDER BY 1;

-- 문제 13
SELECT *
FROM TB_STUDENT;

SELECT STUDENT_NAME AS 동명이름, COUNT(*) AS "동명인 수"
FROM TB_STUDENT
GROUP BY STUDENT_NAME
HAVING COUNT(*) > 1
ORDER BY 1;

-- WORKSHOP 2-2
-- 문제 1
SELECT *
FROM TB_DEPARTMENT;

SELECT COUNT(*) AS "학생 수" 
FROM TB_STUDENT
WHERE SUBSTR(ENTRANCE_DATE,1,2) = '01' AND DEPARTMENT_NO = '003';

-- 문제 2
SELECT CATEGORY AS 계열, DEPARTMENT_NAME AS 학과이름, CAPACITY AS 정원
FROM TB_DEPARTMENT
WHERE CATEGORY LIKE '공학%' AND CAPACITY BETWEEN 20 AND 30
ORDER BY 학과이름;

-- 문제 3
SELECT *
FROM TB_DEPARTMENT;

SELECT CATEGORY AS 계열, COUNT(*) AS "학과 수"
FROM TB_DEPARTMENT
WHERE CATEGORY LIKE '%학%' 
GROUP BY CATEGORY
ORDER BY "학과 수" DESC;

-- 문제 4 
SELECT *
FROM TB_PROFESSOR;

SELECT * 
FROM TB_DEPARTMENT
WHERE DEPARTMENT_NAME = '영어영문학과';

SELECT PROFESSOR_NAME AS 교수이름, SUBSTR(PROFESSOR_SSN,1,2) AS 출생년도, PROFESSOR_ADDRESS AS 주소
FROM TB_PROFESSOR
WHERE DEPARTMENT_NO = '002'
ORDER BY 출생년도 ASC;

-- 문제 5
SELECT * 
FROM TB_DEPARTMENT
WHERE DEPARTMENT_NAME = '국어국문학과';

SELECT *
FROM TB_STUDENT;

SELECT DEPARTMENT_NO AS 학과번호, STUDENT_NAME AS 학생이름, 
DECODE(ABSENCE_YN, 'Y', '휴학', 
    'N','정상') AS 휴학여부
FROM TB_STUDENT
WHERE DEPARTMENT_NO = '001' AND SUBSTR(STUDENT_ADDRESS,1,2) = '서울';

-- WORKSHOP 2-3
-- 문제 6
select	'[' || substr(STUDENT_SSN, 1, 8) 
       || '******]' AS "[주민번호]", STUDENT_NAME 이름
FROM TB_STUDENT
WHERE STUDENT_SSN LIKE '80%' AND STUDENT_NAME LIKE '김%' AND SUBSTR(STUDENT_SSN,8,1) ='2';

-- 문제 7

SELECT *
FROM TB_DEPARTMENT;

SELECT DEPARTMENT_NAME AS 학과이름, CAPACITY AS 정원, 
CASE  WHEN CAPACITY >=40 THEN '대강의실'
      WHEN CAPACITY >=30 THEN '중강의실'
      ELSE '소강의실' END AS 강의실크기
FROM TB_DEPARTMENT
WHERE CATEGORY = '예체능'
order by 2 desc, 1;

-- 문제 8
SELECT *
FROM TB_STUDENT;

SELECT DEPARTMENT_NO AS 학과번호, STUDENT_NAME AS 학생이름, COACH_PROFESSOR_NO AS 지도교수번호, 
TO_CHAR(ENTRANCE_DATE,'YYYY')||'년' AS 입학년도
FROM TB_STUDENT
WHERE STUDENT_ADDRESS IS NULL AND
TO_CHAR(ENTRANCE_DATE, 'YYYY') BETWEEN 2005 AND 2007 AND SUBSTR(STUDENT_SSN,8,1) = '1'
ORDER BY 4, 2;

-- WORKSHOP 3-1
-- 문제 16
SELECT STUDENT_NAME AS 동일이름, COUNT(*) AS "동명인 수"
FROM TB_STUDENT
GROUP BY STUDENT_NAME
HAVING COUNT(*)>1
ORDER BY 1;

-- 문제 17
SELECT *
FROM TB_STUDENT;

SELECT STUDENT_NAME AS 학생이름,STUDENT_NO AS 학번, STUDENT_ADDRESS AS "거주지 주소"
FROM TB_STUDENT
WHERE SUBSTR(TO_CHAR(ENTRANCE_DATE,'YYYY'),1,2)='19' AND SUBSTR(STUDENT_ADDRESS,1,3) IN ('경기도', '강원도')
ORDER BY 1;

-- 문제 18
SELECT *
FROM TB_PROFESSOR;

SELECT *
FROM TB_DEPARTMENT
WHERE DEPARTMENT_NAME = '법학과';

SELECT PROFESSOR_NAME, PROFESSOR_SSN
FROM TB_PROFESSOR
WHERE DEPARTMENT_NO = '005'
ORDER BY 2;

-- 문제 19
SELECT *
FROM TB_CLASS;

SELECT CLASS_NAME, DEPARTMENT_NAME
FROM TB_CLASS INNER JOIN TB_DEPARTMENT USING(DEPARTMENT_NO);

-- 문제 20 
SELECT CLASS_NAME, 
       PROFESSOR_NAME
FROM   TB_CLASS
JOIN   TB_CLASS_PROFESSOR USING(CLASS_NO)
JOIN   TB_PROFESSOR USING(PROFESSOR_NO);

-- WORKSHOP
-- 문제 21
SELECT *
FROM TB_DEPARTMENT
WHERE CATEGORY LIKE '인문사회%';

SELECT CLASS_NAME, PROFESSOR_NAME
FROM TB_CLASS c jOIN TB_CLASS_PROFESSOR b 
                ON c.CLASS_NO = b.CLASS_NO 
                JOIN TB_PROFESSOR a
                ON a.PROFESSOR_NO = b.PROFESSOR_NO
                JOIN TB_DEPARTMENT d
                ON d.DEPARTMENT_NO = a.DEPARTMENT_NO
WHERE d.CATEGORY = '인문사회';

-- 문제 22
SELECT *
FROM TB_DEPARTMENT
WHERE DEPARTMENT_NAME = '음악학과';

SELECT STUDENT_NO AS 학번, STUDENT_NAME AS "학생 이름", ROUND(AVG(POINT),1) AS "전체 평점"
FROM TB_GRADE JOIN TB_STUDENT USING(STUDENT_NO)
                JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
WHERE DEPARTMENT_NO = '059'
GROUP BY STUDENT_NO, STUDENT_NAME
ORDER BY 3 DESC;

-- 문제 23
SELECT DEPARTMENT_NAME, STUDENT_NAME, PROFESSOR_NAME
FROM TB_DEPARTMENT JOIN TB_STUDENT USING(DEPARTMENT_NO)
                   JOIN TB_PROFESSOR ON TB_PROFESSOR.PROFESSOR_NO = TB_STUDENT.COACH_PROFESSOR_NO
WHERE TB_STUDENT.STUDENT_NO = 'A313047';

-- 문제 24
SELECT *
FROM TB_GRADE;
SELECT *
FROM TB_STUDENT;
SELECT *
FROM TB_CLASS
WHERE CLASS_NAME LIKE '인간%';

SELECT STUDENT_NAME, TERM_NO AS TERM_NAME
FROM TB_STUDENT JOIN TB_GRADE USING(STUDENT_NO)
                JOIN TB_CLASS USING(CLASS_NO)
WHERE TERM_NO LIKE '2007%' AND CLASS_NO = 'C2604100';

-- 문제 25
SELECT CLASS_NAME, DEPARTMENT_NAME
FROM TB_CLASS JOIN TB_DEPARTMENT USING (DEPARTMENT_NO)
         LEFT JOIN TB_CLASS_PROFESSOR USING(CLASS_NO) 
WHERE CATEGORY = '예체능'
AND PROFESSOR_NO IS NULL
ORDER BY 2;

-- 문제 26
SELECT *
FROM TB_DEPARTMENT
WHERE DEPARTMENT_NAME = '서반아어학과';

SELECT STUDENT_NAME AS "학생이름",NVL(PROFESSOR_NAME, '지도교수 미지정') AS "지도교수"
FROM   TB_STUDENT A LEFT JOIN TB_PROFESSOR ON (COACH_PROFESSOR_NO = PROFESSOR_NO)
                         JOIN TB_DEPARTMENT B ON(A.DEPARTMENT_NO = B.DEPARTMENT_NO)
WHERE B.DEPARTMENT_NAME = '서반아어학과'
ORDER BY STUDENT_NO;
-- TB_STUDENT A LEFT JOIN TB_PROFESSOR
-- 출력하고자하는 것이 TB_STUDENT에 NULL 값이여도 출력하고자 한다면, LEFT OUTER 조인으로 해야한다
-- INNER 조인으로 하면 A테이블의 NULL 값은 제외되고 출력된다. 

-- 문제 27
SELECT *
FROM TB_CLASS;

SELECT *
FROM TB_DEPARTMENT;

SELECT *
FROM TB_GRADE;

SELECT CLASS_NO, CLASS_NAME, TRUNC(AVG(POINT),8) AS "AVG(POINT)"
FROM TB_CLASS JOIN TB_DEPARTMENT USING(DEPARTMENT_NO) 
                JOIN TB_GRADE USING(CLASS_NO)
WHERE CLASS_TYPE LIKE '%전공%' AND DEPARTMENT_NAME = '환경조경학과'
GROUP BY CLASS_NO,CLASS_NAME;
-- 그냥 JOIN일 경우 공통된 것만 출력하기에 컬럼에 별칭을 줄 필요가 없다.

-- 문제 28
SELECT *
FROM TB_DEPARTMENT
WHERE DEPARTMENT_NAME ='환경조경학과'; -- CATEGORY : 자연과학

SELECT DEPARTMENT_NAME AS "계열 학과명", ROUND(AVG(POINT),1) AS 전공평점
FROM TB_DEPARTMENT JOIN TB_CLASS USING(DEPARTMENT_NO)
                   JOIN TB_GRADE USING(CLASS_NO)
WHERE CATEGORY = '자연과학' AND CLASS_TYPE LIKE '%전공%'
GROUP BY DEPARTMENT_NAME
ORDER BY 1;
-- 그냥 JOIN일 경우 공통된 것만 출력하기에 컬럼에 별칭을 줄 필요가 없다.







